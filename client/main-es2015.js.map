{"version":3,"sources":["./src/environments/environment.ts","./src/app/routing/auth.guard.ts","./src/app/components/editor/editor-home/editor-home.component.ts","./src/app/components/editor/editor-home/editor-home.component.html","./src/app/routing/app-routing.module.ts","./src/app/components/app/app.component.ts","./src/app/components/app/app.component.html","./src/app/components/editor/story-editor/story-editor.component.ts","./src/app/components/editor/story-editor/story-editor.component.html","./src/app/services/api/api.service.js","./src/app/app.module.ts","./src/app/services/api/api.service.ts","./src/app/services/editor/model.service.ts","./src/app/components/auth/auth.component.ts","./src/app/components/auth/auth.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  server: {\n    assets: {\n      root: \"localhost:3000/public/client/\"\n    },\n    api: {\n      root: \"localhost:3000/api/0.1\"\n    }\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\nimport 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\n\nimport { ApiService } from '../services/api/api.service'\nimport { Observable } from 'rxjs';\nimport { tap, map, take } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private auth: ApiService, private router: Router) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n\n      return this.auth.getUser$().pipe(\n           take(1),\n           map(user => !!user), // <-- map to boolean\n           tap(loggedIn => {\n             if (!loggedIn) {\n               console.log('access denied')\n               this.router.navigate(['/login']);\n             }\n         })\n    )\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api/api.service';\nimport { Project, User } from 'src/app/model/model';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'matsukaze-editor-home',\n  templateUrl: './editor-home.component.html',\n  styleUrls: ['./editor-home.component.scss']\n})\nexport class EditorHomeComponent implements OnInit {\n\n  user: Observable<User>;\n  projects: Observable<Project[]>;\n\n  constructor(private apiService: ApiService) { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<div class=\"top\">\n  <div class=\"workspace\">\n\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from '../routing/auth.guard';\nimport { EditorHomeComponent } from '../components/editor/editor-home/editor-home.component';\nimport { AppComponent } from '../components/app/app.component';\n\nconst routes: Routes = [\n  { path: '', component: EditorHomeComponent },\n  { path: 'editor', component: EditorHomeComponent,  canActivate: [AuthGuard] },\n  { path: '**', component: AppComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { ApiService } from 'src/app/services/api/api.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n  title = 'matsukaze';\n\n  constructor(public auth: ApiService) { }\n\n  ngOnInit(): void {\n    this.auth.login$(\"konstantinos.dimitriou@aethon.sg\", \"test\").subscribe();   // tmp autologin\n  }\n\n\n\n}\n","<div *ngIf=\"auth.isAuthenticated$() | async; then authenticated else login\"></div>\n\n\n<ng-template #authenticated>\n  <nav class=\"navbar fixed-top navbar-expand-md navbar-dark\">\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <a class=\"navbar-brand\"><img src=\"/client/assets/img/aethon-glyph.png\" style=\"max-height: 25px;\"/></a>\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Read</a></li>\n        <li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Create</a></li>\n        <li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Home</a></li>\n      </ul>\n    </div>\n  </nav>\n  <matsukaze-story-editor></matsukaze-story-editor>\n</ng-template>\n\n<ng-template #login>\n  <matsukaze-auth></matsukaze-auth>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { StoryService } from 'src/app/services/editor/model.service';\nimport { Observable } from 'rxjs';\nimport { Story } from 'src/app/model/model';\n\n@Component({\n  selector: 'matsukaze-story-editor',\n  templateUrl: './story-editor.component.html',\n  styleUrls: ['./story-editor.component.scss']\n})\nexport class StoryEditorComponent implements OnInit {\n\n  story: Observable<Story>\n\n  constructor(private storyService: StoryService) {\n\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  get(): any {\n    return this.storyService.getStory$(1)\n  }\n\n}\n","<div class=\"top\">\n  <div class=\"workspace\">\n    <p>story-editor works!</p>\n    <div *ngIf=\"get() | async\">Wahaha</div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { catchError, map, flatMap } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as api from '../api.spec.json';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n    constructor(http) {\n        this.http = http;\n        this.test = true;\n        this.connected = true;\n        this.isAuthenticated = false;\n        this.locale = \"en\";\n        this.root = null;\n        this.verbose = true;\n        this.token = null;\n        this.headers = null;\n        this.user$ = null;\n        if (this.test)\n            this.root = api.root.dev;\n        else\n            this.root = api.root.test;\n    }\n    login$(email, password) {\n        return this._request$(api.actions.auth.login, { email: email, password: password }).pipe(map(data => {\n            var _a;\n            if ((_a = data) === null || _a === void 0 ? void 0 : _a.user) {\n                const user = data.user;\n                this.user$ = of(user);\n                return user;\n            }\n            else\n                return null;\n        }));\n    }\n    getUser$() { return this.user$; }\n    isAuthenticated$() { console.log(this.isAuthenticated); if (this.token)\n        return of(true);\n    else\n        return of(false); }\n    request$(action, data, blob) {\n        return this.isAuthenticated$().pipe(map(isAuthenticated => { console.log(isAuthenticated); if (isAuthenticated)\n            return this._request$(action, data, blob);\n        else\n            return of(null); }), flatMap(req => { return req; }));\n    }\n    _request$(action, data, blob) {\n        var req;\n        const url = this.root + action.endpoint;\n        if (this.verbose) {\n            console.log(\"*** HTTP request starting\" +\n                \"\\nheaders:\" + this.headers +\n                \"\\ntype:\" + action.method +\n                \"\\nurl:\" + url +\n                \"\\nData:\" + JSON.stringify(data) +\n                \"\\nConnection: \" + this.connected);\n        }\n        switch (action.method) {\n            case api.methods.get: {\n                if (blob)\n                    req = this.http.get(url, { params: data, headers: this.headers, responseType: 'blob' });\n                else\n                    req = this.http.get(url, { params: data, headers: this.headers });\n                break;\n            }\n            case api.methods.post: {\n                req = this.http.post(url, data);\n                break;\n            }\n        }\n        return req.pipe(catchError(err => {\n            if (this.verbose) {\n                console.log(\"*** HTTP error\" +\n                    \"\\nStatus:\" + err.status +\n                    \"\\nurl:\" + url);\n                return of(null);\n            }\n        }), map(response => {\n            var _a;\n            if (this.verbose && response) {\n                console.log(\"*** HTTP response received\" +\n                    \"\\nurl:\" + url +\n                    \"\\nResponse:\" + JSON.stringify(response));\n            }\n            if ((_a = response) === null || _a === void 0 ? void 0 : _a.access_token) {\n                this.token = response.access_token;\n                this.headers = new HttpHeaders().set('Authorization', \"Bearer \" + this.token);\n                this.isAuthenticated = true;\n            }\n            return (response);\n        }));\n    }\n}\nApiService.ɵfac = function ApiService_Factory(t) { return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient)); };\nApiService.ɵprov = i0.ɵɵdefineInjectable({ token: ApiService, factory: ApiService.ɵfac, providedIn: 'root' });\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(ApiService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: i1.HttpClient }]; }, null); })();\n//# sourceMappingURL=api.service.js.map","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n// Angular modules\nimport { AppRoutingModule } from './routing/app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { AutosizeModule } from 'ngx-autosize';\nimport { DndModule } from 'ngx-drag-drop';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n// Matsukaze modules\nimport { AppComponent } from './components/app/app.component';\nimport { AuthComponent } from './components/auth/auth.component';\nimport { EditorHomeComponent } from './components/editor/editor-home/editor-home.component';\nimport { StoryEditorComponent } from './components/editor/story-editor/story-editor.component';\n\n// Providers\nimport { ApiService } from './services/api/api.service';\nimport { StoryService } from './services/editor/editor.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthComponent,\n    EditorHomeComponent,\n    StoryEditorComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    FontAwesomeModule,\n    DndModule,\n    NgSelectModule,\n    AutosizeModule\n  ],\n  providers: [\n    ApiService,\n    StoryService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { tap, catchError, map, delay, flatMap, mergeAll, switchMap } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport * as api from '../api.spec.json';\nimport { User } from 'src/app/model/model.js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  private test: boolean = true;\n  private connected: boolean = true;\n  private isAuthenticated: boolean = false;\n  private locale: string = \"en\";\n  private root: string = null;\n  private verbose: boolean = true;\n  private token: string = null;\n  private headers: HttpHeaders = null;\n  user$: Observable<User> = null;\n\n  constructor(private http: HttpClient) {\n    if(this.test) this.root = api.root.dev; else this.root = api.root.test;\n  }\n\n  login$(email: string, password: string): Observable<User> {\n    return this._request$(api.actions.auth.login, {email: email, password: password}).pipe(\n      map( data => {\n        if(data?.user) {\n          const user:User = data.user;\n          this.user$ = of(user);\n          return user;\n        }\n        else return null;\n      })\n    );\n  }\n\n  getUser$(): Observable<User> { return this.user$; }\n\n  isAuthenticated$(): Observable<boolean> { console.log(this.isAuthenticated); if(this.token) return of(true); else return of(false) }\n\n  public request$(action: any, data?: any, blob?: boolean): Observable<any> {\n    return this.isAuthenticated$().pipe(\n      map(isAuthenticated => { console.log(isAuthenticated); if(isAuthenticated) return this._request$(action, data, blob); else return of(null) }),\n      flatMap(req => {return req})\n    );\n  }\n\n  private _request$(action: any, data?: any, blob?: boolean): Observable<any> {\n    var req: Observable<any>;\n    const url = this.root + action.endpoint;\n\n    if(this.verbose) {\n      console.log(\"*** HTTP request starting\" +\n                  \"\\nheaders:\" + this.headers +\n                  \"\\ntype:\" + action.method +\n                  \"\\nurl:\" + url +\n                  \"\\nData:\" + JSON.stringify(data) +\n                  \"\\nConnection: \" + this.connected)\n    }\n    switch(action.method) {\n      case api.methods.get : {\n        if(blob) req = this.http.get(url, {params: data, headers: this.headers, responseType: 'blob'});\n        else req = this.http.get(url, {params: data, headers: this.headers});\n        break;\n      }\n      case api.methods.post : {\n        req = this.http.post(url, data);\n        break;\n      }\n    }\n\n    return req.pipe(\n      catchError(err => {\n        if(this.verbose) {\n          console.log(\"*** HTTP error\" +\n                      \"\\nStatus:\" + err.status +\n                      \"\\nurl:\" + url);\n          return of(null);\n        }\n      }),\n      map(response => {\n        if(this.verbose && response) {\n          console.log(\"*** HTTP response received\" +\n                    \"\\nurl:\" + url +\n                    \"\\nResponse:\" + JSON.stringify(response));\n        }\n        if(response?.access_token) {\n          this.token = response.access_token;\n          this.headers = new HttpHeaders().set('Authorization', \"Bearer \" + this.token);\n          this.isAuthenticated = true;\n        }\n        return(response);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Project, Story } from 'src/app/model/model.js';\nimport { Observable, of } from 'rxjs';\nimport { ApiService } from '../api/api.service.js';\nimport * as api from '../api.spec.json';\nimport { map, flatMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoryService {\n\n  constructor(private apiService: ApiService) { }\n\n  getProject$(): Observable<Project> {\n    return null;\n  }\n\n  getStory$(id: number): Observable<Story> {\n    return this.apiService.request$(api.actions.story.getStory, {id: id})\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api/api.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'matsukaze-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent {\n  email: string = '';\n  password: string = '';\n  retry: boolean = false;\n\n  constructor(private authService: ApiService) { }\n\n  submit() {\n    this.authService.login$(this.email, this.password).pipe(\n      map(response => { if(response) this.retry = false; else this.retry = true; })\n    ).subscribe();\n  }\n\n}\n","<div class=\"auth\">\n  <form class=\"form\">\n    <h3>Login</h3>\n    <div class=\"form-group\">\n      <input [(ngModel)]=\"email\" name=\"email\" type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Your email\">\n      <!-- <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small> -->\n    </div>\n    <div class=\"form-group\">\n      <input [(ngModel)]=\"password\" type=\"password\" name=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Your password\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"submit()\">Submit</button>\n    <div *ngIf=\"retry\">Invalid username or password, please try again.</div>\n    <div>\n      <ul>\n        <li><a href=\"#\">Create free account</a></li>\n        <li><a href=\"#\">Forgot password</a></li>\n      </ul>\n    </div>\n    <div>\n      <img src=\"/client/assets/img/aethon-logo.jpg\"   />\n    </div>\n  </form>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}